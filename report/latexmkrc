#!/bin/env perl

# ==============================================================================
# This file is mostly entirely grabbed from
#     https://collaborating.tuhh.de/alex/latex-cookbook
# provided under the MIT License. The copyright notice is reported below as per
# license terms.
#
# Copyright (c) 2022 Alex Povel
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ==============================================================================

# This file contains instructions and configurations for the `latexmk` program.
# That program is somewhat like `make`, but tailored to LaTeX.
# LaTeX has a distinct characteristic of regularly requiring *multiple runs* of
# the same program (e.g. `lualatex`) before the build is finished.
# It's a *multi-pass* system.
# In the intermediary runs, latex generates auxiliary files responsible for
# resolving references, links, tables of content etc.
#
# `latexmk` knows about these dependencies (otherwise we tell it in this very
# config file, see below), detects these and runs latex (and other, outside
# programs) accordingly.
#
# Now, why do we need *both* `latexmk` and `make`? Both automate builds.
#
# `latexmk` is not powerful enough to cover all use cases. For our latex needs,
# `make` basically only delegates to `latexmk`. We **do not** call e.g.
# `lualatex` multiple times manually from `make`: this logic is left to
# `latexmk` and `latexmkrc`.
#
# However, `make` can also do much more, e.g. clean-up operations etc.
# Therefore, `make` and `latexmkrc` *together* are just super powerful and
# useful.
#
# The shebang at the top  is only to get syntax highlighting right across GitLab,
# GitHub and IDEs.
# This file is not meant to be run, but read by `latexmk`.

# ==============================================================================
# PDF Generation/Building/Compilation
# ==============================================================================

# PDF-generating modes are:
# 1: pdflatex, as specified by $pdflatex variable (still largely in use)
# 2: postscript conversion, as specified by the $ps2pdf variable (useless)
# 3: dvi conversion, as specified by the $dvipdf variable (useless)
# 4: lualatex, as specified by the $lualatex variable (best)
# 5: xelatex, as specified by the $xelatex variable (second best)
$pdf_mode = 4;

# Treat undefined references and citations as well as multiply defined
# references as ERRORS instead of WARNINGS. This is only checked in the *last*
# run, since naturally, there are undefined references in initial runs. This
# setting is potentially annoying when debugging/editing, but highly desirable
# in the final build.
#
# However, I could not eradicate all warnings, so that `latexmk` currently fails
# with this option enabled.
# Specifically, `microtype` fails together with `fontawesome`/`fontawesome5`,
# see: https://tex.stackexchange.com/a/547514/120853
#
# The fix in that answer did not help.
# Setting `verbose=silent` to mute `microtype` warnings did not work.
# Switching between `fontawesome` and `fontawesome5` did not help.
$warnings_as_errors = 0;

# Show used CPU time. Looks like: https://tex.stackexchange.com/a/312224/120853
$show_time = 1;

# Default is 5; we seem to need more owed to the complexity of the document.
# Actual documents probably don't need this many since they won't use all
# features, plus won't be compiling from cold each time.
$max_repeat=7;

# --shell-escape option (execution of code outside of latex) is required for the
#'svg' package.
# It converts raw SVG files to the PDF+PDF_TEX combo using InkScape.
#
# SyncTeX allows to jump between source (code) and output (PDF) in IDEs with
# support (many have it). A value of `1` is enabled (gzipped), `-1` is enabledx
# but uncompressed, `0` is off.
#
# SyncTeX allows to jump between source (code) and output (PDF) in IDEs with
# Testing in VSCode w/ LaTeX Workshop only worked for the compressed version.
# Adjust this as needed.
#
# %O and %S will forward Options and the Source file, respectively, given to latexmk.
#
# `set_tex_cmds` applies to all *latex commands (latex, xelatex, lualatex, ...),
# so no need to specify these each. This allows to simply change `$pdf_mode` to
# get a different engine. Check if this works with `latexmk --commands`.
#set_tex_cmds("--shell-escape --synctex=1 %O %S");

# option 2 is same as 1 (run biber when necessary), but also deletes the
# regeneratable bbl-file in a clenaup (`latexmk -c`). Do not use if original
# bib file is not available!
$bibtex_use = 2;  # default: 1

# Change default `biber` call, help catch errors faster/clearer. See
# https://web.archive.org/web/20200526101657/https://www.semipol.de/2018/06/12/latex-best-practices.html#database-entries
$biber = "biber --validate-datamodel %O %S";

# ==============================================================================
# Auxiliary Files
# ==============================================================================

# Let latexmk know about generated files, so they can be used to detect if a
# rerun is required, or be deleted in a cleanup.
#
# - loe: List of Examples (KOMAScript)
# - lol: List of Listings (`listings` and `minted` packages)
# - run.xml: biber runs
# - glg: glossaries log
# - glstex: generated from glossaries-extra
push @generated_exts, 'loe', 'lol', 'lor', 'run.xml', 'glg', 'glstex';

# Also delete the *.glstex files from package glossaries-extra. Problem is,
# that that package generates files of the form "basename-digit.glstex" if
# multiple glossaries are present. Latexmk looks for "basename.glstex" and so
# does not find those. For that purpose, use wildcard.
# Also delete files generated by gnuplot/pgfplots contour plots
# (.dat, .script, .table).
$clean_ext = "%R-*.glstex %R_contourtmp*.*";
